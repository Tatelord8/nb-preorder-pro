// Script de verificaci√≥n de migraciones y conexi√≥n a Supabase
import { createClient } from '@supabase/supabase-js';

const SUPABASE_URL = "https://oszmlmscckrbfnjrveet.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Im9zem1sbXNjY2tyYmZuanJ2ZWV0Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NjAyNjEzNjMsImV4cCI6MjA3NTgzNzM2M30.bs1pWdYQozaxLAeo2HhbTJSJQOPOVttTUDhBYb1Bo98";

const supabase = createClient(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY);

async function verifyMigrations() {
  console.log("üîç Verificando migraciones y estructura de base de datos...\n");

  try {
    // 1. Verificar conexi√≥n b√°sica
    console.log("1Ô∏è‚É£ Verificando conexi√≥n a Supabase...");
    const { data: connectionTest, error: connectionError } = await supabase
      .from("productos")
      .select("count")
      .limit(1);
    
    if (connectionError) {
      console.error("‚ùå Error de conexi√≥n:", connectionError.message);
      return false;
    }
    console.log("‚úÖ Conexi√≥n a Supabase exitosa\n");

    // 2. Verificar estructura de tabla productos
    console.log("2Ô∏è‚É£ Verificando estructura de tabla productos...");
    const { data: tableStructure, error: structureError } = await supabase
      .from("productos")
      .select(`
        id,
        sku,
        nombre,
        precio_usd,
        linea,
        categoria,
        genero,
        tier,
        game_plan,
        imagen_url,
        xfd,
        fecha_despacho,
        marca_id,
        rubro,
        created_at
      `)
      .limit(1);
    
    if (structureError) {
      console.error("‚ùå Error de estructura:", structureError.message);
      return false;
    }
    console.log("‚úÖ Estructura de tabla productos verificada\n");

    // 3. Verificar tabla marcas
    console.log("3Ô∏è‚É£ Verificando tabla marcas...");
    const { data: marcasData, error: marcasError } = await supabase
      .from("marcas")
      .select("id, nombre, descripcion, activa")
      .limit(1);
    
    if (marcasError) {
      console.error("‚ùå Error en tabla marcas:", marcasError.message);
      return false;
    }
    console.log("‚úÖ Tabla marcas verificada\n");

    // 4. Verificar pol√≠ticas RLS
    console.log("4Ô∏è‚É£ Verificando pol√≠ticas RLS...");
    const { data: rlsTest, error: rlsError } = await supabase
      .from("productos")
      .select("id")
      .limit(1);
    
    if (rlsError) {
      console.error("‚ùå Error en pol√≠ticas RLS:", rlsError.message);
      return false;
    }
    console.log("‚úÖ Pol√≠ticas RLS funcionando correctamente\n");

    // 5. Verificar funciones SQL
    console.log("5Ô∏è‚É£ Verificando funciones SQL...");
    const { data: functionsTest, error: functionsError } = await supabase
      .rpc('is_superadmin', { user_id: '00000000-0000-0000-0000-000000000000' });
    
    if (functionsError) {
      console.log("‚ö†Ô∏è Funciones SQL no disponibles (normal en entorno de desarrollo)");
    } else {
      console.log("‚úÖ Funciones SQL verificadas");
    }

    console.log("\nüéâ VERIFICACI√ìN COMPLETA: Todas las migraciones est√°n aplicadas correctamente");
    return true;

  } catch (error) {
    console.error("‚ùå Error durante la verificaci√≥n:", error.message);
    return false;
  }
}

// Ejecutar verificaci√≥n
verifyMigrations().then(success => {
  if (success) {
    console.log("\n‚úÖ Estado: MIGRACIONES APLICADAS CORRECTAMENTE");
    process.exit(0);
  } else {
    console.log("\n‚ùå Estado: ERROR EN MIGRACIONES");
    process.exit(1);
  }
});
