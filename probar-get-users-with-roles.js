// Script para probar la funci√≥n get_users_with_roles despu√©s de la correcci√≥n
console.log("üîç PRUEBA FUNCI√ìN GET_USERS_WITH_ROLES");
console.log("====================================");

window.probarGetUsersWithRoles = async () => {
  try {
    console.log("üîç Probando la funci√≥n get_users_with_roles...");
    
    // Verificar si Supabase est√° disponible
    if (typeof window.supabase === 'undefined') {
      console.log("‚ùå Supabase no est√° disponible");
      return;
    }
    
    // Obtener sesi√≥n actual
    const { data: { session }, error: sessionError } = await window.supabase.auth.getSession();
    
    if (sessionError) {
      console.log("‚ùå Error obteniendo sesi√≥n:", sessionError);
      return;
    }
    
    if (!session) {
      console.log("‚ùå No hay sesi√≥n activa");
      return;
    }
    
    console.log("‚úÖ Sesi√≥n activa encontrada");
    console.log("üìß Email:", session.user.email);
    console.log("üÜî User ID:", session.user.id);
    
    // Verificar rol del usuario
    console.log("\nüîç Verificando rol del usuario...");
    
    try {
      const { data: userRole, error: roleError } = await window.supabase
        .from("user_roles")
        .select("role, nombre")
        .eq("user_id", session.user.id)
        .single();
      
      if (roleError) {
        console.log("‚ùå Error obteniendo rol:", roleError.message);
        return;
      }
      
      if (!userRole) {
        console.log("‚ùå Usuario no encontrado en user_roles");
        return;
      }
      
      console.log("‚úÖ Datos del usuario:");
      console.log("   - Role:", userRole.role);
      console.log("   - Nombre:", userRole.nombre);
      
      if (userRole.role !== 'superadmin') {
        console.log("‚ö†Ô∏è Usuario NO es superadmin");
        console.log("üí° Necesitas hacer login como superadmin");
        return;
      }
      
      console.log("‚úÖ Usuario es SUPERADMIN");
      
    } catch (err) {
      console.log("‚ùå Excepci√≥n obteniendo rol:", err.message);
      return;
    }
    
    // Probar la funci√≥n get_users_with_roles
    console.log("\nüîç Probando la funci√≥n get_users_with_roles...");
    
    try {
      const { data: users, error } = await window.supabase
        .rpc('get_users_with_roles');
      
      if (error) {
        console.log("‚ùå Error en get_users_with_roles:", error.message);
        console.log("üîç C√≥digo:", error.code);
        console.log("üîç Detalles:", error.details);
        console.log("üîç Hint:", error.hint);
      } else {
        console.log("‚úÖ Funci√≥n get_users_with_roles ejecutada exitosamente");
        console.log("üìä Total usuarios obtenidos:", users.length);
        
        users.forEach((user, index) => {
          console.log(`\n   ${index + 1}. Usuario: ${user.nombre}`);
          console.log(`      - ID: ${user.id}`);
          console.log(`      - User ID: ${user.user_id}`);
          console.log(`      - Email: ${user.email}`);
          console.log(`      - Role: ${user.role}`);
          console.log(`      - Cliente ID: ${user.cliente_id}`);
          console.log(`      - Marca ID: ${user.marca_id}`);
          console.log(`      - Tier: ${user.tier}`);
          console.log(`      - Created: ${user.created_at}`);
        });
      }
    } catch (err) {
      console.log("‚ùå Excepci√≥n en get_users_with_roles:", err.message);
    }
    
    // Probar acceso directo a la tabla usuarios
    console.log("\nüîç Probando acceso directo a la tabla usuarios...");
    
    try {
      const { data: usuarios, error: usuariosError } = await window.supabase
        .from("usuarios")
        .select("*");
      
      if (usuariosError) {
        console.log("‚ùå Error en usuarios:", usuariosError.message);
      } else {
        console.log("‚úÖ Acceso directo a usuarios exitoso");
        console.log("üìä Total usuarios en tabla:", usuarios.length);
        
        usuarios.forEach((usuario, index) => {
          console.log(`\n   ${index + 1}. Usuario: ${usuario.nombre}`);
          console.log(`      - ID: ${usuario.id}`);
          console.log(`      - Email: ${usuario.email}`);
          console.log(`      - Activo: ${usuario.activo}`);
          console.log(`      - Created: ${usuario.created_at}`);
        });
      }
    } catch (err) {
      console.log("‚ùå Excepci√≥n en usuarios:", err.message);
    }
    
    console.log("\n‚úÖ PRUEBA COMPLETADA");
    
  } catch (error) {
    console.error("‚ùå Error durante la prueba:", error);
  }
};

console.log("\nüöÄ FUNCI√ìN DISPONIBLE:");
console.log("   - probarGetUsersWithRoles() - Prueba la funci√≥n get_users_with_roles");
console.log("\nüí° Ejecuta: probarGetUsersWithRoles()");
